version: '3.7'

services:
    laravel_mysql:
        container_name: laravel_mysql
        image: laravel_mysql
        build:
            context: .
            dockerfile: docker/container/mysql/Dockerfile
        command: --default-authentication-plugin=mysql_native_password
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: app
            MYSQL_USER: dev
            MYSQL_PASSWORD: password
        networks:
            - laravel_network
        ports:
            - "3307:3307"

    laravel_php:
        container_name: laravel_php
        image: laravel_php
        networks:
            - laravel_network
        build:
            context: .
            dockerfile: docker/container/php-fpm/Dockerfile
        depends_on:
            - laravel_mysql
        volumes:
            - .:/var/www/application
            - ./docker/container/php-fpm/pool/www.conf:/usr/local/etc/php-fpm.d/www.conf
        environment:
            - SSH_AUTH_SOCK
            - PHP_IDE_CONFIG
        working_dir: /var/www/application

    laravel_nginx:
        container_name: laravel_nginx
        image: laravel_nginx
        build:
            context: .
            dockerfile: ./docker/container/nginx/Dockerfile
        hostname: laravel_nginx
        networks:
            - laravel_network
        depends_on:
            - laravel_php
        ports:
            - "8888:80"
            - "8889:443"
        volumes:
            - .:/var/www/application
            - ./docker/container/nginx/vhost/site.conf:/etc/nginx/conf.d/default.conf
        working_dir: /var/www/application

    laravel_redis:
        container_name: laravel_redis
        image: laravel_redis
        build:
            context: .
            dockerfile: ./docker/container/redis/Dockerfile
        hostname: laravel_redis
        command: redis-server /usr/local/etc/redis/redis.conf
        networks:
          - laravel_network
        volumes:
            - ./docker/container/redis/redis.conf:/usr/local/etc/redis/redis.conf
            - redis_volume:/data
        restart: always

    laravel_mongodb:
        container_name: laravel_mongo
        image: laravel_mongo
        build:
            context: .
            dockerfile: ./docker/container/mongo/Dockerfile
        hostname: laravel_mongo
        restart: always
        networks:
            - laravel_network
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: example

    laravel_mongodb-express:
        container_name: laravel_mongo-express
        image: laravel_mongo-express
        build:
            context: .
            dockerfile: ./docker/container/mongo-express/Dockerfile
        hostname: laravel_mongo-express
        restart: always
        networks:
            - laravel_network
        ports:
            - "8890:8081"
        environment:
            ME_CONFIG_MONGODB_SERVER: laravel_mongo
            ME_CONFIG_MONGODB_ADMINUSERNAME: root
            ME_CONFIG_MONGODB_ADMINPASSWORD: example

# Volume names must be unique among drivers
volumes:
    redis_volume:

networks:
    laravel_network:
        driver: bridge

